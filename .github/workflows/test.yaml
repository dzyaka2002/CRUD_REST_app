name: test

on:
  push:
    branches: [master]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/backend-app
  TAG: ${{ github.sha }}
  K8S_NAMESPACE: default
  DEPLOYMENT_NAME: backend

jobs:
  deploy-backend:
    name: Deploy backend
    runs-on: ubuntu-latest
    steps:
      - name: Setup YC CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "${{ secrets.YC_SA_KEY_JSON }}" > sa-key.json
          cat sa-key.json
          ~/yandex-cloud/bin/yc config set service-account-key sa-key.json
          
      - name: Generate fresh IAM token
        id: get-iam-token
        run: |
          TOKEN=$(~/yandex-cloud/bin/yc iam create-token)
          echo "IAM_TOKEN=${TOKEN}" >> $GITHUB_ENV
          echo "::add-mask::${TOKEN}"  # Маскирует токен в логах

      - name: Configure auth
        run: |
          ~/yandex-cloud/bin/yc config set token ${{ env.IAM_TOKEN }}
          ~/yandex-cloud/bin/yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          ~/yandex-cloud/bin/yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
          
      - name: Get kubeconfig
        run: ~/yandex-cloud/bin/yc managed-kubernetes cluster get-credentials --id ${{ secrets.YC_K8S_CLUSTER_ID }} --external
      
      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
            $(kubectl get deploy ${{ env.DEPLOYMENT_NAME }} -o jsonpath='{.spec.template.spec.containers[0].name}')=\
            ${{ env.BACKEND_IMAGE }}:${{ env.TAG }} \
            -n ${{ env.K8S_NAMESPACE }}
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}
